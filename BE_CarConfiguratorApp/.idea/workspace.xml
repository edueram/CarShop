<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="cade8dee-0a6b-4321-89ae-9d21f8f57612" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="Interface" />
        <option value="Record" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2yu6PJEzMMdU7mF7McJ3fcfb0QH" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.api-gateway.keycloak-Container: Compose Deployment.executor": "Run",
    "Docker.api-gateway.pg-keycloakDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose-development.yml.kafka: Compose Deployment.executor": "Run",
    "Docker.docker-compose-development.yml.keycloak: Compose Deployment.executor": "Run",
    "Docker.docker-compose-development.yml.pg-carDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose-development.yml.pg-carOptDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose-development.yml.pg-inventoryDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose-development.yml.pg-orderDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose-development.yml.pgkeycloakDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose-development.yml.zookeeper: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.car-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.carOption-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.caroption-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.frontend: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.gateway-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.inventory-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.kafka1: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.kafka: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.notification-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.order-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.pg-carDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.pg-carOptDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.pg-inventoryDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.pg-keycloakDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.pg-notifDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.pg-orderDB: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.zookeeper: Compose Deployment.executor": "Run",
    "Docker.docker-compose_build.yml.gateway-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose_build.yml.order-service: Compose Deployment.executor": "Run",
    "Maven.api-gateway [clean].executor": "Run",
    "Maven.car-service [clean].executor": "Run",
    "Maven.carOption-service [clean].executor": "Run",
    "Maven.order-service [clean].executor": "Run",
    "Maven.order-service [package].executor": "Run",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "Spring Boot.ApiGatewayApplication.executor": "Run",
    "Spring Boot.CarOptionServiceApplication.executor": "Run",
    "Spring Boot.CarServiceApplication.executor": "Run",
    "Spring Boot.InventoryServiceApplication.executor": "Run",
    "Spring Boot.NotificationServiceApplication.executor": "Run",
    "Spring Boot.OrderServiceApplication.executor": "Run",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "jdk.selected.JAVA_MODULE": "23",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/Nkin/Edueram_Projects/CarShop/BE_CarConfiguratorApp/frontend_CarConfig/src/environments",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "run.configurations.included.in.services": "true",
    "settings.editor.selected.configurable": "File.Encoding",
    "ts.external.directory.path": "C:\\Users\\Nkin\\Edueram_Projects\\CarShop\\BE_CarConfiguratorApp\\frontend_CarConfig\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Nkin\Edueram_Projects\CarShop\BE_CarConfiguratorApp\frontend_CarConfig\src\environments" />
      <recent name="C:\Users\Nkin\Edueram_Projects\CarShop\BE_CarConfiguratorApp" />
      <recent name="C:\Users\Nkin\Edueram_Projects\CarShop\BE_CarConfiguratorApp\myData" />
      <recent name="C:\Users\Nkin\Edueram_Projects\CarShop\BE_CarConfiguratorApp\order-service\src\main\resources" />
      <recent name="C:\Users\Nkin\Edueram_Projects\CarShop\BE_CarConfiguratorApp\notification-service\src\main\resources" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Nkin\Edueram_Projects\CarShop\BE_CarConfiguratorApp\myData" />
      <recent name="C:\Users\Nkin\Edueram_Projects\CarShop\BE_CarConfiguratorApp\api-gateway\src\main\resources" />
      <recent name="I:\Meine Ablage\Workspace\CarConfiguration\car-service" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.errami.mics.notificationservice.service" />
      <recent name="com.errami.mics.orderservice.controller" />
      <recent name="com.errami.mics.orderservice.model" />
      <recent name="com.errami.mics.orderservice.service" />
      <recent name="com.errami.mics.apigateway.config" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="KtorApplicationConfigurationType" />
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Spring Boot.ApiGatewayApplication">
    <configuration default="true" type="JetRunConfigurationType">
      <module name="car-service" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="car-service" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ApiGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="api-gateway" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.errami.mics.apigateway.ApiGatewayApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.errami.mics.apigateway.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CarOptionServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="carOption-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.errami.mics.caroptionservice.CarOptionServiceApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.errami.mics.caroptionservice.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CarServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="car-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.errami.mics.carservice.CarServiceApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.errami.mics.carservice.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="InventoryServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="inventory-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.errami.mics.inventoryservice.InventoryServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="notification-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.errami.mics.notificationservice.NotificationServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="order-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.errami.mics.orderservice.OrderServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose-development.yml.kafka: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="kafka" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose-development.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose-development.yml.zookeeper: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="zookeeper" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose-development.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose-development.yml.kafka: Compose Deployment" />
      <item itemvalue="Docker.docker-compose-development.yml.zookeeper: Compose Deployment" />
      <item itemvalue="Spring Boot.NotificationServiceApplication" />
      <item itemvalue="Spring Boot.InventoryServiceApplication" />
      <item itemvalue="Spring Boot.OrderServiceApplication" />
      <item itemvalue="Spring Boot.ApiGatewayApplication" />
      <item itemvalue="Spring Boot.CarOptionServiceApplication" />
      <item itemvalue="Spring Boot.CarServiceApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Spring Boot.ApiGatewayApplication" />
        <item itemvalue="Spring Boot.CarOptionServiceApplication" />
        <item itemvalue="Spring Boot.CarServiceApplication" />
        <item itemvalue="Docker.docker-compose-development.yml.kafka: Compose Deployment" />
        <item itemvalue="Docker.docker-compose-development.yml.zookeeper: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23726.103" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23726.103" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="cade8dee-0a6b-4321-89ae-9d21f8f57612" name="Changes" comment="" />
      <created>1750672085971</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1750672085971</updated>
      <workItem from="1750672086993" duration="10223000" />
      <workItem from="1750699730657" duration="37221000" />
      <workItem from="1750889287892" duration="6212000" />
      <workItem from="1750926541575" duration="15466000" />
      <workItem from="1750973862492" duration="4031000" />
      <workItem from="1751011799072" duration="3776000" />
      <workItem from="1751021081887" duration="4390000" />
      <workItem from="1751299129995" duration="3164000" />
      <workItem from="1751352625420" duration="24407000" />
      <workItem from="1751464640697" duration="15778000" />
      <workItem from="1751667854168" duration="665000" />
      <workItem from="1751726950255" duration="3000" />
      <workItem from="1751727056404" duration="4317000" />
      <workItem from="1752054501222" duration="883000" />
      <workItem from="1752254969553" duration="15000" />
      <workItem from="1752254997774" duration="334000" />
      <workItem from="1752315205700" duration="49828000" />
      <workItem from="1752585127806" duration="83112000" />
      <workItem from="1753084953046" duration="2985000" />
      <workItem from="1753438835425" duration="16720000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>