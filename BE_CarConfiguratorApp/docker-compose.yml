services:

  ################ Api-Gateway ##############################

  pgkeycloakDB:
    image: postgres:16
    container_name: pgkeycloakDB
    environment:
      POSTGRES_DB: keycloakDB
      POSTGRES_USER: hassan
      POSTGRES_PASSWORD: pass
    volumes:
      - ./data/pg_keycloakDB:/var/lib/postgresql/data
    ports:
      - "5436:5432"

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    command: ["start-dev", "--import-realm"]
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: pgkeycloakDB
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloakDB
      KC_DB_USERNAME: hassan
      KC_DB_PASSWORD: pass
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin



    ports:
      - "8080:8080"
    volumes:
      - ./docker/keycloak/realms:/opt/keycloak/data/import
    depends_on:
      - pgkeycloakDB

  ##################### Car-service ####################

  pg-carDB:
    image: postgres:16
    container_name: pg_carDB
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: hassan
      POSTGRES_DB: carDB
    ports:
      - "5433:5432"
    volumes:
      - ./data/pg_carDB:/var/lib/postgresql/data
      - ./docker/pg_carDB/initCarDB.sql:/docker-entrypoint-initdb.d/init.sql

  ######################## CarOption-service #######################

  pg-carOptDB:
    image: postgres:16
    container_name: pg_carOptDB
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: hassan
      POSTGRES_DB: caroptDB
    ports:
      - "5434:5432"
    volumes:
      - ./data/pg_carOptDB:/var/lib/postgresql/data
      - ./docker/pg_carOptDB/initCarOptDB.sql:/docker-entrypoint-initdb.d/init.sql

  ################## Order-Service ###################################

  pg-orderDB:
    image: postgres:16
    container_name: pg_orderDB
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: hassan
      POSTGRES_DB: orderDB
    ports:
      - "5435:5432"
    volumes:
      - ./data/pg_orderDB:/var/lib/postgresql/data
      - ./docker/pg_orderDB/initOrderDB.sql:/docker-entrypoint-initdb.d/init.sql

  ############### Inventory-service #################################

  pg-inventoryDB:
    image: postgres:16
    container_name: pg_inventoryDB
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: hassan
      POSTGRES_DB: inventoryDB
    ports:
      - "5437:5432"
    volumes:
      - ./data/pg_inventoryDB:/var/lib/postgresql/data
      - ./docker/pg_inventoryDB/initInventoryDB.sql:/docker-entrypoint-initdb/init.sql

  #############  Kafka  ############
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ###### car service ######
  car-service:
    build:
      context: ./car-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - pg-carDB

  ##### carOption service ##
  caroption-service:
    build:
      context: ./carOption-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - pg-carOptDB

  ##### inventory service ##
  inventory-service:
    build:
      context: ./inventory-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - pg-inventoryDB

  ##### notification service ##
  notification-service:
    build:
      context: ./notification-service
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - kafka

  ##### order service ##
  order-service:
    build:
      context: ./order-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - pg-orderDB
      - kafka

  ####  api gateway ####
  gateway-service:
    build:
      context: ./api-gateway
    ports:
      - "9000:9000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - keycloak
      - car-service
      - order-service
      - caroption-service
      - kafka
      - zookeeper
      - inventory-service
      - notification-service

  ########## Frontend ########

  frontend:
    build:
      context: ./frontend_CarConfig
    ports:
      - "4200:80"
    depends_on:
      - gateway-service