spring.application.name=order-service

# Server Port
server.port=8083

###########
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8084/realms/car-configuration-realm

######### Kafka ############
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# PostgreSQL Datenbankverbindung
spring.datasource.url=jdbc:postgresql://localhost:5435/orderDB
spring.datasource.username=hassan
spring.datasource.password=pass
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Konfiguration
#spring.jpa.hibernate.ddl-auto= validate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# CORS (für Frontend-Kommunikation)
# Bei Bedarf anpassen oder mit @CrossOrigin arbeiten
# spring.web.cors.allowed-origins=http://localhost:4200
# spring.web.cors.allowed-methods=*

# Logging
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# flyway
spring.flyway.baseline-on-migrate=true